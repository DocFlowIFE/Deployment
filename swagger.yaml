openapi: 3.0.0
info:
  title: DocFlow API
  version: 0.1.9

paths:
  /documents:
    post:
      tags:
        - document
      description: "Creates or replaces a document"
      requestBody:
        $ref: '#/components/requestBodies/DocumentBody'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '500':
          $ref: '#/components/responses/InternalServerError'
    x-amazon-apigateway-integration:
      uri:
        Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateDocumentFunction.Arn}/invocations"
      responses:
        default:
          statusCode: "201"
      passthroughBehavior: "when_no_match"
      httpMethod: "POST"
      contentHandling: "CONVERT_TO_TEXT"
      type: "aws_proxy"

  /documents/{documentId}:
    parameters:
        - name: "documentId"
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
    get:
      tags:
        - document
      description: "Returns a link to a given document"
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                description: "Body with the link to the given document"
                properties:
                  link:
                    type: string
                required:
                  - link
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetDocumentFunction.Arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
          
    delete:
      tags:
        - document
      description: "Deletes a document with given id"
      responses:
        '200':
          $ref: '#/components/responses/Ok'
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteDocumentFunction.Arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
          
  /ticketTemplates:
    get:
      tags:
        - template
      description: "Returns all ticket templates"
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                type: object
                description: "Templates"
                properties:
                  templates:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                        description:
                          type: string
                        flow:
                          type: array
                          items:
                            type: string
                      required:
                        - title
                        - flow
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetTicketTemplatesFunction.Arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
          
    post:
      tags:
        - template
      description: "Creates a ticket template"
      requestBody:
        $ref: '#/components/requestBodies/TemplateBody'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateTicketTemplateFunction.Arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
          
  /ticketTemplates/{templateId}:
    parameters:
        - name: "templateId"
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
    get:
      tags:
        - template
      description: "Returns a ticket template"
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                type: object
                description: "The template"
                properties:
                  title:
                    type: string
                  description:
                    type: string
                  flow:
                    type: array
                    items:
                      type: string
                required:
                  - title
                  - flow
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetTicketTemplateFunction.Arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
          
    delete:
      tags:
        - template
      description: "Deletes a ticket template"
      responses:
        
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${DeleteTicketTemplateFunction.Arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "DELETE"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  
  /tickets:
    get:
      tags:
        - ticket
      description: "Returns all tickets"
      responses:
        '200':
          description: Succeeded
          content:
           apllication/json:
              schema:
                type: object
                description: "Tickets"
                properties:
                  title:
                    type: string
                  description:
                    type: string
                  flow:
                    type: array
                    items:
                      type: string
                  stage:
                    type: integer
                required:
                  - title
                  - flow
                  - stage
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetTicketsFunction.Arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  
    post:
      tags:
        - ticket
      description: "Creates or replaces a ticket"
      requestBody:
        $ref: '#/components/requestBodies/TicketBody'
      responses:
        '201':
          $ref: '#/components/responses/Created'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateTicketFunction.Arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  
  /tickets/{ticketId}:
    parameters:
      - name: "ticketId"
        in: path
        required: true
        schema:
            type: integer
            minimum: 1
    get:
      tags:
        - ticket
      description: "Returns a ticket"
      responses:
        '200':
          description: Succeeded
          content:
           apllication/json:
              schema:
                type: object
                description: "The ticket"
                properties:
                  title:
                    type: string
                  description:
                    type: string
                  flow:
                    type: array
                    items:
                      type: string
                  stage:
                    type: integer
                required:
                  - title
                  - flow
                  - stage
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      x-amazon-apigateway-integration:
        uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetTicketFunction.Arn}/invocations"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "GET"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
  
components:
  schemas:
    Error:
      type: object
      properties:
        message:
          type: string
          
  requestBodies:
    DocumentBody:
      required: false
      content:
        application/json:
          schema:
            description: "Body with the link to the given document"
            properties:
              link:
                type: string
            required:
              - link
    TemplateBody:
      required: false
      content:
        application/json:
          schema:
            type: object
            description: "The template"
            properties:
              title:
                type: string
              description:
                type: string
              flow:
                type: array
                items:
                  type: string
            required:
              - title
              - flow
    TicketBody:
      required: false
      content:
        apllication/json:
          schema:
            type: object
            description: "The ticket"
            properties:
              title:
                type: string
              description:
                type: string
              flow:
                type: array
                items:
                  type: string
              stage:
                type: integer
            required:
              - title
              - flow
              - stage
      
  responses:
    Ok:
      description: Succeeded
    Created:
      description: Resource has been successfully created
    NoContent:
      description: Operation successfully completed
    BadRequest:
      description: Invalid user request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Object not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'